//Placeholder FGD created by Gvarados, thenayr, and Marnamai

//DOWNLOAD UPDATES AT:
//https://github.com/gvarados1/Half-Life-Alyx-FGD


@include "base.fgd"
@include "lights.fgd"
@include "ai_basenpc.fgd"
@include "markup_volumes.fgd"

// ----------------------------------------- MONSTERS -----------------------------------------
@PointClass base(BaseNPC) editormodel("models/creatures/headcrab_classic/headcrab_classic.vmdl") = npc_headcrab : "Placeholder"
[
]
@PointClass base(BaseNPC) editormodel("models/creatures/headcrab_black/headcrab_black.vmdl") = npc_headcrab_black : "Placeholder"
[
]
@PointClass base(BaseNPC) editormodel("models/creatures/headcrab/headcrab.vmdl") = npc_headcrab_poison : "Placeholder"
[
]
@PointClass base(BaseNPC) editormodel("models/creatures/headcrab/headcrab.vmdl") = npc_headcrab_fast : "Placeholder. DOES NOT MAKE SOUNDS"
[
]
@PointClass base(BaseNPC) editormodel("models/creatures/headcrab_armored/headcrab_armored.vmdl") = npc_headcrab_armored : "Placeholder"
[
]
@PointClass base(BaseNPC) editormodel("models/creatures/headcrab_reviver/headcrab_reviver.vmdl") = npc_headcrab_runner : "Placeholder"
[
]

@PointClass base(BaseNPC) editormodel("models/creatures/zombie_classic/zombie_classic.vmdl") = npc_zombie : "Placeholder"
[
]
@PointClass base(BaseNPC) editormodel("models/creatures/zombie_blind/zombie_blind.vmdl") = npc_zombie_blind : "Jeff"
[
]


@PointClass base(BaseNPC) editormodel("models/creatures/manhack/manhack.vmdl") = npc_manhack : "Placeholder"
[
]
@PointClass base(BaseNPC) editormodel("models/creatures/barnacle/barnacle.vmdl") = npc_barnacle : "Placeholder"
[
]
@PointClass base(BaseNPC, BasePhysicsSimulated) editormodel("models/combine_turrets/floor_turret.vmdl") = npc_turret_floor : "Placeholder"
[
]

@PointClass base(Targetname) editormodel("models/creatures/antlion/antlion.vmdl") = npc_antlion : "Placeholder"
[
	model(choices) : "Model" : "models/creatures/antlion/antlion.vmdl" : "Antlion" = 
	[
		"models/creatures/antlion/antlion.vmdl" : "Antlion"
		"models/creatures/antlion/antlion_worker.vmdl" : "Antlion Worker"
	]
]

@PointClass base(Targetname) editormodel("models/characters/eli/eli.vmdl") = npc_eli : "Placeholder"
[
]
@NPCClass base(BaseNPC) studio("models/characters/combine_grunt/combine_grunt.vmdl") = npc_combine_s : "PLACEHOLDER Combine Soldier"
[
	model(choices) : "Model" : "models/characters/combine_grunt/combine_grunt.vmdl" : "Combine Grunt" = 
	[
		"models/characters/combine_grunt/combine_grunt.vmdl" : "Combine Grunt"
		"models/characters/combine_suppressor/combine_suppressor.vmdl" : "Combine Suppressor"
		"models/characters/combine_soldier_heavy/combine_soldier_heavy.vmdl" : "Combine Heavy"
		"models/characters/combine_soldier_captain/combine_captain.vmdl" : "Combine Captain"
	]
]
@PointClass base(Targetname, BasePhysicsSimulated) editormodel("models/props/xen_infestation/xen_grenade_plant.vmdl") = xen_foliage_grenade_spawner : "Placeholder"
[
]
@PointClass base(Targetname, BasePhysicsSimulated) editormodel("models/props/xen_infestation/boomerplant_01.vmdl") = xen_foliage_bloater : "Placeholder"
[
]

// ----------------------------------------- TILE ENTITIES -----------------------------------------
@SolidClass base(Targetname) = func_dry_erase_board : "Placeholder"
[
]
@SolidClass base(Targetname) = func_combine_barrier : "Combine fence"
[
]
// ----------------------------------------- ITEMS -----------------------------------------
@PointClass base(Targetname) editormodel("models/props_combine/health_charger/combine_health_charger_vr.vmdl") = item_healthcharger : "SPAWNS WITH GRUB. TODO: ADD OPTION TO NOT HAVE GRUB"
[
]
@PointClass base(Targetname) editormodel("models/props_combine/combine_printer/combine_crafting_station.vmdl") = prop_hlvr_crafting_station : "Placeholder"
[
	// Inputs
	input HackingPlugSuccess(void) : "Activates console, allowing weapons to be upgraded."
]
@PointClass base(Targetname) editormodel("models/props_combine/combine_doors/combine_hacking_interact_point.vmdl") = info_hlvr_holo_hacking_plug : "Placeholder"
[
]
@PointClass base(BasePropDoorRotating) model() = prop_door_rotating_physics : "Placeholder door."
[
]
@PointClass base(func_brush) = prop_animinteractable : "Placeholder"
[
]

// ----------------------------------------- PICKUPS -----------------------------------------
@PointClass base(Targetname, BasePhysicsSimulated) editormodel("models/weapons/vr_alyxhealth/vr_health_pen.vmdl") = item_healthvial : "Placeholder"
[
]
@PointClass base(Targetname, BasePhysicsSimulated) editormodel("models/props_combine/health_charger/health_vial.vmdl") = item_hlvr_health_station_vial : "Placeholder"
[
]
@PointClass base(Targetname, BasePhysicsSimulated) editormodel("models/weapons/vr_grenade/grenade_unarmed.vmdl") = item_hlvr_grenade_frag : "Placeholder"
[
]
@PointClass base(Targetname, BasePhysicsSimulated) editormodel("models/weapons/vr_xen_grenade/vr_xen_grenade.vmdl") = item_hlvr_grenade_xen : "Placeholder"
[
]
@PointClass base(Targetname, BasePhysicsSimulated) editormodel("models/weapons/vr_alyxgun/vr_alyxgun_clip.vmdl") = item_hlvr_clip_energygun : "Placeholder"
[
]
@PointClass base(Targetname, BasePhysicsSimulated) editormodel("models/weapons/vr_alyxgun/pistol_clip_holder.vmdl") = item_hlvr_clip_energygun_multiple : "Placeholder"
[
]
@PointClass base(Targetname, BasePhysicsSimulated) editormodel("models/weapons/vr_alyxgun/vr_alyxgun_assembled_skin01.vmdl") = item_hlvr_weapon_energygun : "Placeholder"
[
]
@PointClass base(Targetname) editormodel("models/items/crafting_metal/resin_puck01.vmdl") = item_hlvr_crafting_currency_small : "Placeholder"
[
]
@PointClass base(Targetname) editormodel("models/items/crafting_metal/resin_puck_stack.vmdl") = item_hlvr_crafting_currency_large : "Placeholder"
[
]
@PointClass base(Targetname) editormodel("models/weapons/vr_alyxtool/alyx_tool.vmdl") = Item_hlvr_multitool : "Placeholder"
[
]
@PointClass base(Targetname) editormodel("models/weapons/vr_shotgun/shell_hand.vmdl") = Item_hlvr_clip_shotgun_single : "SINGLE SHELL"
[
]
@PointClass base(Targetname) editormodel("models/weapons/vr_shotgun/shell_hand.vmdl") = item_hlvr_clip_shotgun_shells_pair : "TWO SHELLS"
[
]
@PointClass base(Targetname) editormodel("models/weapons/vr_ammo/shotgun_shell_ammo_box.vmdl") = item_hlvr_clip_shotgun_multiple : "FOUR SHELLS"
[
]
@PointClass base(Targetname) editormodel("models/weapons/vr_shotgun/vr_flip_shotgun_body.vmdl") = item_hlvr_weapon_shotgun : "Placeholder"
[
]
@PointClass base(Targetname) editormodel("models/weapons/vr_ipistol/vr_ipistol.vmdl") = item_hlvr_weapon_rapidfire : "Placeholder"
[
]
@PointClass base(Targetname) editormodel("models/weapons/vr_ipistol/capsule_power_cell.vmdl") = Item_hlvr_clip_rapidfire : "Placeholder"
[
]
@PointClass base(Targetname) editormodel("models/weapons/vr_tripmine/tripmine.vmdl") = item_hlvr_weapon_tripmine : "Placeholder"
[
]
@PointClass base(Targetname) editormodel("models/props_combine/combine_battery/combine_battery_large.vmdl") = item_hlvr_prop_battery : "Placeholder"
[
]
@PointClass base(Targetname) editormodel("models/creatures/headcrab_reviver/reviver_heart.vmdl") = prop_reviver_heart : "Placeholder"
[
]
@PointClass base(Targetname) editormodel("models/props/headcrab_guts/headcrab_gland.vmdl") = item_hlvr_headcrab_gland : "Placeholder"
[
]
@PointClass base(prop_physics) model() = prop_dry_erase_marker : "Placeholder"
[
]

// ----------------------------------------- LOGIC -----------------------------------------
@PointClass base(Targetname, EnableDisable) tags( Logic ) iconsprite("editor/logic_relay.vmat") = info_hlvr_equip_player : "Placeholder. I assume this is for equiping the gravity gloves (see inputs)"
[
	// Properties
	equip_on_mapstart(boolean) : "Equip on Map Start": 0
	start_weapons_empty(boolean) : "Start Weapons Empty" : 0
	energygun(boolean) : "Pistol" : 0
	shotgun(boolean) : "Shotgun" : 0
	rapidfire(boolean) : "Rapid Fire" : 0
	flashlight(boolean) : "Flashlight" : 0
	flashlight_enabled(boolean) : "Flashlight Enabled" : 0
	crowbar(boolean) : "Crowbar" : 0
	grabbitygloves(boolean) : "Grabbity Gloves" : 0
	slingshot(boolean) : "Slingshot" : 0
	itemholder(boolean) : "Item Holder" : 0
	radio(boolean) : "Radio" : 0
	multitool(boolean) : "Multitool" : 0
	set_ammo(integer) : "Pistol Ammo" : 0
	set_ammo_rapidfire(integer) : "Rapid Fire Ammo" : 0
	set_ammo_shotgun(integer) : "Shotgun Ammo" : 0
	set_resin(integer) : "Resin" : 0
	pistol_upgrade_lasersight(boolean) : "Pistol Laser Sight Upgrade" : 0
	pistol_upgrade_reflexsight(boolean) : "Pistol Reflex Sight Upgrade" : 0
	pistol_upgrade_bullethopper(boolean) : "Pistol Bullet Hopper Upgrade" : 0
	pistol_upgrade_burstfire(boolean) : "Pistol Burst Fire Upgrade" : 0
	rapidfire_upgrade_explodingclusters(boolean) : "Rapid Fire Exploding Bullets Upgrade" : 0
	rapidfire_upgrade_reflexsight(boolean) : "Rapid Fire Reflex Sight Upgrade" : 0
	rapidfire_upgrade_lasersight(boolean) : "Rapid Fire Laser Sight Upgrade" : 0
	rapidfire_upgrade_extended_magazine(boolean) : "Rapid Fire Extended Magazine Upgrade" : 0
	shotgun_upgrade_autoloader(boolean) : "Shotgun Autoloader Upgrade" : 0
	shotgun_upgrade_grenade(boolean) : "Shotgun Grenade Launcher Upgrade" : 0
	shotgun_upgrade_lasersight(boolean) : "Shotgun Laser Sight Upgrade" : 0
	shotgun_upgrade_quickfire(boolean) : "Shotgun Quick Fire Upgrade" : 0
	shotgun_has_grenade(boolean) : "Shotgun has grenade equipped" : 0
	energygun_loaded_ammo(integer) : "Loaded Pistol Ammo" : 0
	rapidfire_loaded_ammo(integer) : "Loaded Rapid Fire Ammo" : 0
	shotgun_loaded_ammo(integer) : "Loaded Shotgun Amo" : 0
	inventory_enabled(boolean) : "Inventory Enabled" : 0
	backpack_enabled(boolean) : "Backpack Enabled" : 0
	allow_removal(boolean) : "Allow Removal" : 0
	// Inputs
	input equipnow(void) : "Probably gives gravity gloves"
	input enablebackpack(void) : "Probably lets you collect ammo and resen"
	input enableinventory(void) : "Probably enables wrist pockets"
	input use(void) : "Probably doesn't do anything"
]

// steamvr imported
@SolidClass base(worldbase) = worldspawn : 
	"This is the world entity. Each map can only contain one, and it's automatically created for you."
[
	pvstype(choices) : "Precomputed Visibility" : 0 : "" = 
	[
		0 : "Disabled"
		1 : "Test map (open space, no skybox)"
		10 : "Full visibility solve"
	]
	steamaudio_export(boolean) : "Export Steam Audio Geometry" : "No"
]

@PointClass base( Targetname ) global( 3dskybox )= skybox_reference
[
	targetMapName(instance_file) : "Map Name"
	fixupNames(boolean) : "Fixup Entity Names" : 0
	worldGroupID(string) : "WorldGroupID" : "skyboxWorldGroup0"
]

@PointClass
	iconsprite( "materials/editor/env_fog_controller.vmat" ) tags( Lighting )
	base( Targetname )
	gradientfog { textureRequired = true }
	global( gradient_fog )
= env_gradient_fog
[
	fogstart(float) : "Fog Start Distance" : "0.0"
	fogend(float) : "Fog End Distance" : "4000.0"
	fogstartheight(float) : "Fog Start Height" : "0.0"
	fogendheight(float) : "Fog End Height" : "200.0"
	farz(string) : "Far Z Clip Plane" : "-1"
	gradientfogtexture(resource:texture) : "Fog Gradient Texture" : "materials/effects/example_gradient_fog.vtex"
	input Enable(void) : "Enable the fog."
	input Disable(void) : "Disable the fog."
]

@PointClass base(Targetname, EnableDisable) tags( Lighting )
	iconsprite( "materials/editor/env_cubemap_fog.vmat" ) 
	cubemap_fog()
= env_cubemap_fog  
[
	cubemapfogtexture(resource:texture) : "Cubemap Texture" : "materials/skybox/tests/src/light_test_sky_sunset.vtex"
	cubemapfoglodbiase(float) : "Cubemap LOD (mip) Bias" : "0.5" : "Adjust how quickly the cubemap blurs out into the distance"
	cubemapfogstartdistance(float) : "Fog Start Distance" : "0.0"
	cubemapfogenddistance(float) : "Fog End Distance" : "6000.0"
	cubemapfogfalloffexponent(float) : "Distance Falloff Exponent" : "2.0" : "Exponent for distance falloff. For example, 2.0 = proportional to square of distance"
	cubemapfogheightwidth(float) : "Height Fog Width" : "0.0"
	cubemapfogheightstart(float) : "Height Fog Start" : "2000.0"
	cubemapfogheightexponent(float) : "Height Fog Exponent" : "2.0"
]
